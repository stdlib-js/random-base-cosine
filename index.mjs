// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-cosine-quantile@esm/index.mjs";var g=u.isPrimitive,c=j.isPrimitive,b=p,v=h;var x=function(e,t){return!g(e)||v(e)?new TypeError(b("invalid argument. `%s` must be a number and not `NaN`. Value: `%s`.","mu",e)):c(t)?null:new TypeError(b("invalid argument. `%s` must be a positive number. Value: `%s`.","s",t))},y=f;var w=function(e,t,n){return y(e(),t,n)},N=e,L=t,E=n,O=s,T=r,P=i,V=o,G=m,R=d.factory,A=a,J=l,M=p,S=x,q=w;var z=function(){var e,t,n,s,r,i;if(0===arguments.length)t=R();else if(1===arguments.length){if(!O(e=arguments[0]))throw new TypeError(M("invalid argument. Options argument must be an object. Value: `%s`.",e));if(P(e,"prng")){if(!T(e.prng))throw new TypeError(M("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",e.prng));t=e.prng}else t=R(e)}else{if(s=S(r=arguments[0],i=arguments[1]))throw s;if(arguments.length>2){if(!O(e=arguments[2]))throw new TypeError(M("invalid argument. Options argument must be an object. Value: `%s`.",e));if(P(e,"prng")){if(!T(e.prng))throw new TypeError(M("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",e.prng));t=e.prng}else t=R(e)}else t=R()}return N(n=void 0===r?h:j,"NAME","cosine"),e&&e.prng?(N(n,"seed",null),N(n,"seedLength",null),E(n,"state",V(null),G),N(n,"stateLength",null),N(n,"byteLength",null),N(n,"toJSON",V(null)),N(n,"PRNG",t)):(L(n,"seed",o),L(n,"seedLength",m),E(n,"state",l,p),L(n,"stateLength",d),L(n,"byteLength",a),N(n,"toJSON",u),N(n,"PRNG",t),t=t.normalized),n;function o(){return t.seed}function m(){return t.seedLength}function d(){return t.stateLength}function a(){return t.byteLength}function l(){return t.state}function p(e){t.state=e}function u(){var e={type:"PRNG"};return e.name=n.NAME,e.state=J(t.state),e.params=void 0===r?[]:[r,i],e}function j(){return q(t,r,i)}function h(e,n){return A(e)||A(n)||n<=0?NaN:q(t,e,n)}},k=z(),B=z;e(k,"factory",B);var C=k;export{C as default,B as factory};
//# sourceMappingURL=index.mjs.map
