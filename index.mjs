// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-cosine-quantile@esm/index.mjs";var g=u.isPrimitive,c=j.isPrimitive,b=h;var v=function(e,t){return!g(e)||b(e)?new TypeError("invalid argument. `mu` must be a number primitive and not `NaN`. Value: `"+e+"`."):c(t)?null:new TypeError("invalid argument. `s` must be a positive number. Value: `"+t+"`.")},x=f;var y=function(e,t,n){return x(e(),t,n)},w=e,N=t,L=n,E=s,O=r,T=i,P=o,V=m,G=d.factory,R=a,A=l,J=p,M=v,S=y;var q=function(){var e,t,n,s,r,i;if(0===arguments.length)t=G();else if(1===arguments.length){if(!E(e=arguments[0]))throw new TypeError(J("invalid argument. Options argument must be an object. Value: `%s`.",e));if(T(e,"prng")){if(!O(e.prng))throw new TypeError(J("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",e.prng));t=e.prng}else t=G(e)}else{if(s=M(r=arguments[0],i=arguments[1]))throw s;if(arguments.length>2){if(!E(e=arguments[2]))throw new TypeError(J("invalid argument. Options argument must be an object. Value: `%s`.",e));if(T(e,"prng")){if(!O(e.prng))throw new TypeError(J("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",e.prng));t=e.prng}else t=G(e)}else t=G()}return w(n=void 0===r?h:j,"NAME","cosine"),e&&e.prng?(w(n,"seed",null),w(n,"seedLength",null),L(n,"state",P(null),V),w(n,"stateLength",null),w(n,"byteLength",null),w(n,"toJSON",P(null)),w(n,"PRNG",t)):(N(n,"seed",o),N(n,"seedLength",m),L(n,"state",l,p),N(n,"stateLength",d),N(n,"byteLength",a),w(n,"toJSON",u),w(n,"PRNG",t),t=t.normalized),n;function o(){return t.seed}function m(){return t.seedLength}function d(){return t.stateLength}function a(){return t.byteLength}function l(){return t.state}function p(e){t.state=e}function u(){var e={type:"PRNG"};return e.name=n.NAME,e.state=A(t.state),e.params=void 0===r?[]:[r,i],e}function j(){return S(t,r,i)}function h(e,n){return R(e)||R(n)||n<=0?NaN:S(t,e,n)}},z=q(),k=q;e(z,"factory",k);var B=z;export{B as default,k as factory};
//# sourceMappingURL=index.mjs.map
